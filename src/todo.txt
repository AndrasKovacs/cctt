
QUESTION:
  - Generic API for computing under a BindI, without renaming to fresh var!!!
  - like projecting, applying, or matching on stuff
  - "unsafe" mapping functions over binders: these don't rename the bound var, but we have
    to ensure that the mapping function *only* depends on its input! If we refer to e.g.
    values from external scope, that's unsound.


Code:
  - wrap (NeSys(HCom), IS.IVarSet) in some type

Testing:
  - hcom glue
  - coe glue

Feature:
- 1. all Kan computation rules
- 2. strict inductives
- 3. HITs

Convenience:
- print elab cof environment on errors
- sprinkle more source positions in the parser.
- improve system compatibility error messages
  - improve system error positions
- sugar for cof disjunction and âˆ€ in systems.

- sugar for iterated projection:
  (print right-nested projection as number?
    x.1  ~ x.1
    x.2  ~ x.2.1
    x.3  ~ x.2.2.1
    x.4  ~ x.2.2.2.1
    but what about the rightmost field? Should we just use a dummy ending field?


Performance:

- unbox VSys types
- coe Glue: unfold the hcom fiber
- switch to ByteString megaparsec input
