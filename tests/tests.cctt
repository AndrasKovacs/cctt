
-- isEquiv : (A : U)(B : U)(f : A → B) → U
--   := λ A B f.
--       (g : B → A)
--     × (linv : (x : A) → x = g (f x))
--     × (rinv : (x : B) → f (g x) = x)
--     × ((x : A) → (λ {f x} {f x} _. f x) ={i. f (linv x {x} {g (f x)} i) = f x} rinv (f x));

isEquiv (A B : U)(f : A → B) : U :=
    (g    : B → A)
  × (linv : (x : A) → x = g (f x))
  × (rinv : (x : B) → f (g x) = x)
  × ((x : A) → (λ _. f x) ={i. f (linv x i) = f x} (rinv (f x)));

equiv (A B : U) : U :=
  (f : A → B) × isEquiv A B f;

idEquiv (A : U) : equiv A A :=
  (λ x. x, λ x. x, λ x _. x, λ x _. x, λ x _ _. x);

ua (A B : U)(f : equiv A B) : A = B :=
  λ i. Glue B [i=0. (A, f); i=1. (B, idEquiv B)];

uafwd (A B : U)(f : equiv A B)(x : A) : B := coe 0 1 (ua A B f) x;

uabeta (A B : U)(f : equiv A B)(x : A) : coe 0 1 (ua A B f) x = f.1 x :=
  λ i. hcom 1 i B [] (hcom i 1 B [] (coe i 1 (_. B) (f.1 x)));

uabetainv (A B : U)(f : equiv A B)(x : B) : coe 1 0 (ua A B f) x = f.2.1 x :=
  λ i. hcom 1 i A [] (f.2.1 (hcom 1 i B [] (coe 1 i (_. B) x)));

-- BUG: LOOPS!
uasym (A B : U)(f : equiv A B) : B = A := (ua A B f)⁻¹;